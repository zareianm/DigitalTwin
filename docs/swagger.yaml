definitions:
  database.Machine:
    properties:
      machine_id:
        type: integer
      name:
        type: string
      parameters:
        type: string
    type: object
  main.InputParameter:
    properties:
      parameterName:
        type: string
      parameterValue:
        type: string
    type: object
  main.MaximumErrorRate:
    properties:
      errorRate:
        type: integer
      parameterName:
        type: string
    type: object
  main.OutputParameter:
    properties:
      parameterCodeValue:
        type: string
      parameterMachineValue:
        type: string
      parameterName:
        type: string
      status:
        type: boolean
    type: object
  main.SaveTaskResult:
    properties:
      errors:
        type: string
      taskId:
        type: integer
    type: object
  main.TaskDetailOutputModel:
    properties:
      createdAt:
        type: string
      data:
        items:
          $ref: '#/definitions/main.TaskLog'
        type: array
      isActive:
        type: boolean
      machineId:
        type: integer
      maximumErrorRates:
        items:
          $ref: '#/definitions/main.MaximumErrorRate'
        type: array
      pluginOperatingHours:
        type: number
      systemErrorPercentage:
        type: number
      taskId:
        type: integer
      taskName:
        type: string
    type: object
  main.TaskLog:
    properties:
      inputParameters:
        items:
          $ref: '#/definitions/main.InputParameter'
        type: array
      outputParameters:
        items:
          $ref: '#/definitions/main.OutputParameter'
        type: array
      runTime:
        type: string
    type: object
  main.TaskOutputModel:
    properties:
      createdAt:
        type: string
      isActive:
        type: boolean
      machineId:
        type: integer
      pluginOperatingHours:
        type: number
      taskId:
        type: integer
      taskName:
        type: string
    type: object
info:
  contact: {}
  title: DigitalTwin API
  version: "1.0"
paths:
  /api/v1/machines:
    get:
      consumes:
      - application/json
      description: Returns all machines
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Machine'
            type: array
      summary: Returns all machines
      tags:
      - machines
  /api/v1/machines/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an existing machine
      parameters:
      - description: Machine ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: Deletes an existing machine
      tags:
      - machines
    get:
      consumes:
      - application/json
      description: Returns a single machine
      parameters:
      - description: Machine ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Machine'
      summary: Returns a single machine
      tags:
      - machines
  /api/v1/machines/create:
    post:
      consumes:
      - application/json
      description: Creates a new machine
      parameters:
      - description: Machine
        in: body
        name: machine
        required: true
        schema:
          $ref: '#/definitions/database.Machine'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/database.Machine'
      security:
      - BearerAuth: []
      summary: Creates a new machine
      tags:
      - machines
  /api/v1/tasks/GetTaskDetail/{task_id}:
    get:
      consumes:
      - application/json
      description: returns the details of a task
      parameters:
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.TaskDetailOutputModel'
      summary: returns the details of a task
      tags:
      - tasks
  /api/v1/tasks/create:
    post:
      consumes:
      - multipart/form-data
      description: Creates a new task
      parameters:
      - description: C++ or Python source file to scan
        in: formData
        name: file
        required: true
        type: file
      - description: Name of task
        in: formData
        name: taskName
        required: true
        type: string
      - description: ID of the machine
        in: formData
        name: machineId
        required: true
        type: integer
      - description: interval time in minutes
        in: formData
        name: intervalTimeInMinutes
        required: true
        type: integer
      - collectionFormat: csv
        description: input parmas
        in: formData
        items:
          type: string
        name: inputParameters
        required: true
        type: array
      - collectionFormat: csv
        description: output parmas
        in: formData
        items:
          type: string
        name: outputParameters
        required: true
        type: array
      - collectionFormat: csv
        description: output parmas error rates
        in: formData
        items:
          type: integer
        name: outputParametersErrorRate
        required: true
        type: array
      - description: start time in UTC and RFC3339 format (e.g. 2025-08-18T14:30:00Z)
        format: date-time
        in: formData
        name: startTime
        required: true
        type: string
      - description: end time in UTC and RFC3339 format (e.g. 2025-08-18T14:30:00Z)
        format: date-time
        in: formData
        name: endTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.SaveTaskResult'
      summary: Creates a new task
      tags:
      - tasks
  /api/v1/tasks/getTaskList:
    get:
      consumes:
      - application/json
      description: Returns all tasks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.TaskOutputModel'
            type: array
      summary: Returns all tasks
      tags:
      - tasks
swagger: "2.0"
