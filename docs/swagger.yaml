definitions:
  database.User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  main.AnalysisResult:
    properties:
      big_loop_warning:
        type: boolean
      loop_count:
        type: integer
      static_issues:
        items:
          type: string
        type: array
      syntax_errors:
        items:
          type: string
        type: array
      syscall_keywords:
        items:
          type: string
        type: array
      syscall_warning:
        type: boolean
    type: object
info:
  contact: {}
  description: A rest API in Go using Gin framework
  title: Go Gin Rest API
  version: "1.0"
paths:
  /api/v1/jobs/create:
    post:
      consumes:
      - multipart/form-data
      description: Creates a new job
      parameters:
      - description: C++ source file to scan
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/main.AnalysisResult'
      summary: Creates a new job
      tags:
      - jobs
  /api/v1/users:
    get:
      consumes:
      - application/json
      description: Returns all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.User'
            type: array
      summary: Returns all users
      tags:
      - users
  /api/v1/users/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes an existing user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
      security:
      - BearerAuth: []
      summary: Deletes an existing user
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Returns a single user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.User'
      summary: Returns a single user
      tags:
      - users
  /api/v1/users/create:
    post:
      consumes:
      - application/json
      description: Creates a new user
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/database.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/database.User'
      security:
      - BearerAuth: []
      summary: Creates a new user
      tags:
      - users
  /api/v1/users/update/{id}:
    put:
      consumes:
      - application/json
      description: Updates an existing user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/database.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.User'
      security:
      - BearerAuth: []
      summary: Updates an existing user
      tags:
      - users
securityDefinitions:
  BearerAuth:
    description: Enter your bearer token in the format **Bearer &lt;token&gt;**
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
