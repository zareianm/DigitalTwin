{
    "swagger": "2.0",
    "info": {
        "title": "DigitalTwin API",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/api/v1/machines": {
            "get": {
                "description": "Returns all machines",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "machines"
                ],
                "summary": "Returns all machines",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Machine"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/machines/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Creates a new machine",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "machines"
                ],
                "summary": "Creates a new machine",
                "parameters": [
                    {
                        "description": "Machine",
                        "name": "machine",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Machine"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/database.Machine"
                        }
                    }
                }
            }
        },
        "/api/v1/machines/{id}": {
            "get": {
                "description": "Returns a single machine",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "machines"
                ],
                "summary": "Returns a single machine",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Machine ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Machine"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes an existing machine",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "machines"
                ],
                "summary": "Deletes an existing machine",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Machine ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/api/v1/tasks/GetTaskDetail/{task_id}": {
            "get": {
                "description": "returns the details of a task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "returns the details of a task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.TaskDetailOutputModel"
                        }
                    }
                }
            }
        },
        "/api/v1/tasks/create": {
            "post": {
                "description": "Creates a new task",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Creates a new task",
                "parameters": [
                    {
                        "type": "file",
                        "description": "C++ or Python or Java or Javascript source file to scan",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of task",
                        "name": "taskName",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the machine",
                        "name": "machineId",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "interval time in minutes",
                        "name": "intervalTimeInMinutes",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "input parmas",
                        "name": "inputParameters",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "output parmas",
                        "name": "outputParameters",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "description": "output parmas error rates",
                        "name": "outputParametersErrorRate",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "start time in UTC and RFC3339 format (e.g. 2025-08-18T14:30:00Z)",
                        "name": "startTime",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date-time",
                        "description": "end time in UTC and RFC3339 format (e.g. 2025-08-18T14:30:00Z)",
                        "name": "endTime",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/main.SaveTaskResult"
                        }
                    }
                }
            }
        },
        "/api/v1/tasks/getTaskList": {
            "get": {
                "description": "Returns all tasks",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Returns all tasks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/main.TaskOutputModel"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "database.Machine": {
            "type": "object",
            "properties": {
                "machine_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "type": "string"
                }
            }
        },
        "main.InputParameter": {
            "type": "object",
            "properties": {
                "parameterName": {
                    "type": "string"
                },
                "parameterValue": {
                    "type": "string"
                }
            }
        },
        "main.MaximumErrorRate": {
            "type": "object",
            "properties": {
                "errorRate": {
                    "type": "integer"
                },
                "parameterName": {
                    "type": "string"
                }
            }
        },
        "main.OutputParameter": {
            "type": "object",
            "properties": {
                "parameterCodeValue": {
                    "type": "string"
                },
                "parameterMachineValue": {
                    "type": "string"
                },
                "parameterName": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "main.SaveTaskResult": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "string"
                },
                "taskId": {
                    "type": "integer"
                }
            }
        },
        "main.TaskDetailOutputModel": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.TaskLog"
                    }
                },
                "isActive": {
                    "type": "boolean"
                },
                "machineId": {
                    "type": "integer"
                },
                "maximumErrorRates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.MaximumErrorRate"
                    }
                },
                "pluginOperatingHours": {
                    "type": "number"
                },
                "systemErrorPercentage": {
                    "type": "number"
                },
                "taskId": {
                    "type": "integer"
                },
                "taskName": {
                    "type": "string"
                }
            }
        },
        "main.TaskLog": {
            "type": "object",
            "properties": {
                "inputParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.InputParameter"
                    }
                },
                "outputParameters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/main.OutputParameter"
                    }
                },
                "runTime": {
                    "type": "string"
                }
            }
        },
        "main.TaskOutputModel": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "isActive": {
                    "type": "boolean"
                },
                "machineId": {
                    "type": "integer"
                },
                "pluginOperatingHours": {
                    "type": "number"
                },
                "taskId": {
                    "type": "integer"
                },
                "taskName": {
                    "type": "string"
                }
            }
        }
    }
}